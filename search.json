[{"title": "docs/index.md", "slug": "index.html", "contentTokens": ["<nav>", "", "[Home](/preact-islands-diy/)", "", "[Getting Started](/preact-islands-diy/getting-started)", "", "[Github](https://github.com/barelyhuman/preact-islands-diy)", "", "</nav>", "", "# Islands", "", "## Intro", "", "This guide is a simple walkthrough to understand how island architechture works", "and being able to setup your own using tools you already have around you.", "", "First off", " what are islands ? You can read about it from the person who actually", "named this arch that.", "", "[Islands Architecture - Jason Miller &rarr;](https://jasonformat.com/islands-architecture/)", "", "## Why ?", "", "For a lot of devs who've worked with server rendering for a while", " we kinda", "expected frontend tech to take a turn towards server rendering at some point in", "time since data fetching and processing is almost always faster on the server", "where you are closer to the data.", "", "Which is one of many reasons but then there's others that the entire web is", "debating over", " so we'll leave it to the smart people.", "", "Let's move on to implementing the concept", "", "[Getting Started &rarr;](getting-started)", ""]}, {"title": "docs/getting-started.md", "slug": "getting-started.html", "contentTokens": ["<nav>", "", "[Home](/preact-islands-diy/)", "", "[Getting Started](/preact-islands-diy/getting-started)", "", "[Github](https://github.com/barelyhuman/preact-islands-diy)", "", "</nav>", "", "# Getting Started", "", "## Basic Implementation", "", "The basic implementation can be generalized for most SSR + Client Hydration", "apps.", "", "Here's an overview", "", "1. Intially render the view on the server as a static page.", "2. Hydrate the app on client", "", "To go into the details of each.", "", "### Initial Server Render", "", "In this step", " you still build the component tree with whatever UI library you're", "using", " Vue", " React", " Preact", " Solid", " etc. And then flatten the component tree to", "only have the static and immediately computable data. In this case", " no", "sideeffects and state management based code is run.", "", "The output is a static html document that you can send to the client.", "", "Since this guide is tied to [preact](https://preactjs.com/)", " we're going to use", "a library from the preact team that helps us achieve this.", "", "Here's what a very rudimentary implementation of rendering a component on the", "server would look like.", "", "We're using `express.js` here as an example due to it being the first choice of", "most beginners", " the process is mostly same for any other web server engine you", "pick up. Hapi", " Koa", " Fastify", " etc.", "", "```js", "// server.js", "import { h } from 'preact'", "import preactRenderToString from 'preact-render-to-string'", "", "// ...remainig express.js setup", "", "const HomePage = () => {", "  return h('h1'", " {}", " 'hello')", "}", "", "app.get('/'", " async (req", " res) => {", "  res.send(preactRenderToString(h(HomePage", " {})))", "})", "```", "", "Here most work is done by `preactRenderToString` ", " and all we are doing is", "writing components. With a little bit of bundling magic", " we should be able to", "write in JSX to make it a little more friendly to work with.", "", "### Hydrate", "", "Okay", " so a term you'll see smart people use around a lot online.", "", "- Partial Hydration", "- Progressive Hydration", "- add more as they find more such ways etc", "", "To be put simply", " it's to bind the interactivity to a DOM element with", "_existing_ state/effects/events", "", "This _existing_ state/effects/events might be sent from the server", " but if", "working with a component that can handle it's own and the logic is well", "contained in it", " you just mount the component on the DOM with the necessary", "bindings.", "", "As an example", " this might looks a little something like this", "", "```js", "// client.js", "import { hydrate } from 'preact'", "import Counter from './Counter'", "", "const main = () => {", "  // assuming the server rendered the component with the following ID as well.", "  const container = document.getElementById('counter')", "  hydrate(h(Counter", " {})", " document.getElementById('counter'))", "}", "", "main()", "```", ""]}]